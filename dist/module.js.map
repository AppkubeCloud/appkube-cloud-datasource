{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///./common-ds/index.ts","webpack:///./components/ConfigEditor.tsx","webpack:///./components/EditorComponents/Api.tsx","webpack:///./components/EditorComponents/Log.tsx","webpack:///./components/EditorComponents/Metric.tsx","webpack:///./components/EditorComponents/Trace.tsx","webpack:///./components/QueryEditor.tsx","webpack:///./datasource.ts","webpack:///./extended/EditorField.tsx","webpack:///./extended/EditorRow.tsx","webpack:///./extended/Space.tsx","webpack:///./extended/Stack.tsx","webpack:///./service/index.ts","webpack:///./types.ts","webpack:///external amd \"@emotion/css\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/runtime\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./module.ts"],"sourcesContent":["export const SOURCE_VALUE = {\r\n    METRIC: \"metric\",\r\n    LOG: \"log\",\r\n    TRACE: \"trace\",\r\n    API: \"api\"\r\n};\r\n\r\nexport enum MetricEditorMode {\r\n    'Builder',\r\n    'Code',\r\n}\r\n\r\nexport const SOURCE_TYPE = [\r\n    { label: 'Metric', value: SOURCE_VALUE.METRIC },\r\n    { label: 'LOG', value: SOURCE_VALUE.LOG },\r\n    { label: 'Trace', value: SOURCE_VALUE.TRACE },\r\n    { label: 'API', value: SOURCE_VALUE.API }\r\n];\r\n\r\nexport const METRIC_TYPE = [\r\n    { label: 'INFRA', value: \"infra\" },\r\n    { label: 'SERVICE', value: \"service\" },\r\n];\r\n\r\nexport const DUMMY_PRODUCTS = [\r\n    { label: 'HRMS', value: \"hrms\" },\r\n    { label: 'Procurement', value: \"procurement\" },\r\n    { label: 'Supply Chain', value: \"supply_chain\" },\r\n    { label: 'CMS', value: \"cms\" },\r\n];\r\n\r\nexport const DUMMY_ENVS = [\r\n    { label: 'Prod', value: \"prod\" },\r\n    { label: 'Dev', value: \"dev\" },\r\n    { label: 'Stage', value: \"stage\" },\r\n    { label: 'Test', value: \"test\" },\r\n];\r\n\r\nexport const DUMMY_MODULES = [\r\n    { label: 'Recruitment', value: \"Recruitment\" },\r\n    { label: 'Attendance', value: \"Attendance\" },\r\n    { label: 'Appraisals', value: \"Appraisals\" },\r\n    { label: 'Salary', value: \"Salary\" },\r\n    { label: 'Engagement', value: \"Engagement\" },\r\n    { label: 'Documentation', value: \"Documentation\" },\r\n];\r\n\r\nexport const DUMMY_SERVICES = [\r\n    { label: 'Java app', value: \"Recruitment\" },\r\n    { label: 'RDS Postgres DB', value: \"Attendance\" },\r\n    { label: 'Open Search DB', value: \"Appraisals\" },\r\n    { label: 'S3', value: \"Salary\" },\r\n    { label: 'GitHub', value: \"Engagement\" },\r\n];\r\n\r\nexport const DUMMY_METRIC_NAME = [\r\n    { label: 'Metric 1', value: \"Metric 1\" },\r\n    { label: 'Metric 2', value: \"Metric 2\" },\r\n    { label: 'Metric 3', value: \"Metric 3\" },\r\n];\r\n\r\nexport const DUMMY_STASTISTIC = [\r\n    { label: 'Stastic 1', value: \"Stastic 1\" },\r\n    { label: 'Stastic 2', value: \"Stastic 2\" },\r\n    { label: 'Stastic 3', value: \"Stastic 3\" },\r\n];\r\n\r\nexport const METRIC_EDITOR_MODES = [\r\n    { label: 'Builder', value: MetricEditorMode.Builder },\r\n    { label: 'Code', value: MetricEditorMode.Code },\r\n];\r\n","import React, { ChangeEvent } from 'react';\r\nimport { InlineField, Input, SecretInput } from '@grafana/ui';\r\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\r\nimport { MyDataSourceOptions, MySecureJsonData } from '../types';\r\n\r\ninterface Props extends DataSourcePluginOptionsEditorProps<MyDataSourceOptions> { }\r\n\r\nexport function ConfigEditor(props: Props) {\r\n  const { onOptionsChange, options } = props;\r\n\r\n  const onPathChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const jsonData = {\r\n      ...options.jsonData,\r\n      path: event.target.value,\r\n    };\r\n    onOptionsChange({ ...options, jsonData });\r\n  };\r\n\r\n  const onAPIEndPointChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const jsonData = {\r\n      ...options.jsonData,\r\n      apiEndpoint: event.target.value,\r\n    };\r\n    onOptionsChange({ ...options, jsonData });\r\n  };\r\n\r\n  // Secure field (only sent to the backend)\r\n  const onAPIKeyChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    onOptionsChange({\r\n      ...options,\r\n      secureJsonData: {\r\n        apiKey: event.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onResetAPIKey = () => {\r\n    onOptionsChange({\r\n      ...options,\r\n      secureJsonFields: {\r\n        ...options.secureJsonFields,\r\n        apiKey: false,\r\n      },\r\n      secureJsonData: {\r\n        ...options.secureJsonData,\r\n        apiKey: '',\r\n      },\r\n    });\r\n  };\r\n\r\n  const { jsonData, secureJsonFields } = options;\r\n  const secureJsonData = (options.secureJsonData || {}) as MySecureJsonData;\r\n\r\n  return (\r\n    <div className=\"gf-form-group\">\r\n      <InlineField label=\"Path\" labelWidth={12}>\r\n        <Input\r\n          onChange={onPathChange}\r\n          value={jsonData.path || ''}\r\n          placeholder=\"json field returned to frontend\"\r\n          width={40}\r\n        />\r\n      </InlineField>\r\n      <InlineField label=\"API Key\" labelWidth={12}>\r\n        <SecretInput\r\n          isConfigured={(secureJsonFields && secureJsonFields.apiKey) as boolean}\r\n          value={secureJsonData.apiKey || ''}\r\n          placeholder=\"Test\"\r\n          width={40}\r\n          onReset={onResetAPIKey}\r\n          onChange={onAPIKeyChange}\r\n        />\r\n      </InlineField>\r\n      <InlineField label=\"API Endpoint\" labelWidth={12}>\r\n        <Input\r\n          onChange={onAPIEndPointChange}\r\n          value={jsonData.apiEndpoint || ''}\r\n          placeholder=\"API Endpoint\"\r\n          width={40}\r\n        />\r\n      </InlineField>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from 'react';\r\nimport { InlineField, Input, Button, Checkbox } from '@grafana/ui';\r\nimport { EditorRow, EditorRows } from '../../extended/EditorRow';\r\nimport { EditorField } from '../../extended/EditorField';\r\n\r\nexport function Api({ query, onChange }: any) {\r\n  const { elementType, instanceID, method, columns, isObjectInsteadOfArray, isDataInColumn, rowsRoots } = query;\r\n\r\n  const [allColumns, setAllColumns] = React.useState<any>([]);\r\n  const fetchingComplete = useRef(false);\r\n\r\n  React.useEffect(() => {\r\n    if (fetchingComplete.current === false) {\r\n      setAllColumns(columns ? columns : [{\r\n        selector: \"\",\r\n        as: \"\",\r\n        formatAs: \"\",\r\n      }]);\r\n    }\r\n    fetchingComplete.current = true;\r\n  }, [columns]);\r\n\r\n  const onChangeElementType = (e: any) => {\r\n    onChange({ ...query, elementType: e.target.value });\r\n  };\r\n\r\n  const onChangeInstanceID = (e: any) => {\r\n    onChange({ ...query, instanceID: e.target.value });\r\n  };\r\n\r\n  const onChangeMethod = (e: any) => {\r\n    onChange({ ...query, method: e.target.value });\r\n  };\r\n\r\n  const onChangeColumn = (index: any, columnsList: any, key: any, value: any) => {\r\n    columnsList[index][key] = value;\r\n    onChange({ ...query, columns: JSON.parse(JSON.stringify(columnsList)) });\r\n  };\r\n\r\n  const onClickAddColumn = () => {\r\n    allColumns.push({\r\n      selector: \"\",\r\n      as: \"\",\r\n      formatAs: \"\",\r\n    });\r\n    setAllColumns(JSON.parse(JSON.stringify(allColumns)));\r\n  };\r\n\r\n  const onClickRemove = (columns: any, index: any) => {\r\n    columns.splice(index, 1);\r\n    setAllColumns(JSON.parse(JSON.stringify(columns)));\r\n  };\r\n\r\n  const renderColumns = (columns: any) => {\r\n    const retData: any = [];\r\n    for (let i = 0; i < columns.length; i++) {\r\n      const column = columns[i];\r\n      retData.push(\r\n        <EditorRow label=\"\" key={`column-${i}`}>\r\n          <InlineField label=\"Selector\">\r\n            <Input value={column.selector} onChange={(e: any) => onChangeColumn(i, columns, \"selector\", e.target.value)} />\r\n          </InlineField>\r\n          <InlineField label=\"as\">\r\n            <Input value={column.as} onChange={(e: any) => onChangeColumn(i, columns, \"as\", e.target.value)} />\r\n          </InlineField>\r\n          <InlineField label=\"Format as\">\r\n            <Input value={column.formatAs} onChange={(e: any) => onChangeColumn(i, columns, \"formatAs\", e.target.value)} />\r\n          </InlineField>\r\n          {\r\n            columns.length > 1 ?\r\n              <Button onClick={() => onClickRemove(columns, i)} icon='times'></Button> : <></>\r\n          }\r\n        </EditorRow>\r\n      );\r\n    }\r\n    return retData;\r\n  };\r\n\r\n  const onChangeObjectArray = (e: any) => {\r\n    onChange({ ...query, isObjectInsteadOfArray: e.target.checked });\r\n  };\r\n\r\n  const onChangeDataInColumn = (e: any) => {\r\n    onChange({ ...query, isDataInColumn: e.target.checked });\r\n  };\r\n\r\n  const onChangeRowsRoots = (e: any) => {\r\n    onChange({ ...query, rowsRoots: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <EditorRows>\r\n      <EditorRow label=\"\">\r\n        <InlineField label=\"Element Type\">\r\n          <Input value={elementType} onChange={(e: any) => onChangeElementType(e)} />\r\n        </InlineField>\r\n        <InlineField label=\"Instance ID\">\r\n          <Input value={instanceID} onChange={(e: any) => onChangeInstanceID(e)} />\r\n        </InlineField>\r\n        <InlineField label=\"Method\">\r\n          <Input value={method} onChange={(e: any) => onChangeMethod(e)} />\r\n        </InlineField>\r\n      </EditorRow>\r\n      <EditorRow label=\"\">\r\n        <h5><b>Parsing Option and Result Field</b></h5>\r\n      </EditorRow>\r\n      <EditorRow label=\"\">\r\n        <EditorField label='Rows/Root - Optional'>\r\n          <textarea value={rowsRoots} onChange={onChangeRowsRoots} placeholder='Rows/Root Selector'></textarea>\r\n        </EditorField>\r\n      </EditorRow>\r\n      <EditorRow label=\"\">\r\n        <label>Rows/Root - Optional</label>\r\n      </EditorRow>\r\n      {renderColumns(allColumns)}\r\n      <EditorRow label=\"Column - Optional\">\r\n        <Button onClick={onClickAddColumn} icon='plus-square'>Column</Button>\r\n      </EditorRow>\r\n      <EditorRow label=\"\">\r\n        <label >Advance Options - Optional</label>\r\n      </EditorRow>\r\n      <EditorRow label=\"\">\r\n        <Checkbox value={isObjectInsteadOfArray} label='Root returns object instead of array?' onChange={onChangeObjectArray} />\r\n      </EditorRow>\r\n      <EditorRow label=\"\">\r\n        <Checkbox value={isDataInColumn} label='Is data in column format?' onChange={onChangeDataInColumn} />\r\n      </EditorRow>\r\n    </EditorRows>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { InlineField, Input } from '@grafana/ui';\r\nimport { EditorRow, EditorRows } from '../../extended/EditorRow';\r\n// import { DUMMY_PRODUCTS, DUMMY_ENVS, DUMMY_MODULES, DUMMY_SERVICES } from '../../common-ds';\r\n\r\n\r\nexport function Log({ query, onChange }: any) {\r\n  const { elementType, instanceID, logQuery, logGroup } = query;\r\n\r\n  const onChangeElementType = (e: any) => {\r\n    onChange({ ...query, elementType: e.target.value });\r\n  };\r\n\r\n  const onChangeInstanceID = (e: any) => {\r\n    onChange({ ...query, instanceID: e.target.value });\r\n  };\r\n\r\n  const onChangeLogGroup = (e: any) => {\r\n    onChange({ ...query, logGroup: e.target.value });\r\n  };\r\n\r\n  const onChangeLogQuery = (e: any) => {\r\n    onChange({ ...query, logQuery: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <EditorRows>\r\n      <EditorRow label=\"\">\r\n        <InlineField label=\"Element Type\">\r\n          <Input value={elementType} onChange={(e: any) => onChangeElementType(e)} />\r\n        </InlineField>\r\n        <InlineField label=\"Instance ID\">\r\n          <Input value={instanceID} onChange={(e: any) => onChangeInstanceID(e)} />\r\n        </InlineField>\r\n        <InlineField label=\"Log Group\">\r\n          <Input value={logGroup} onChange={(e: any) => onChangeLogGroup(e)} />\r\n        </InlineField>\r\n      </EditorRow>\r\n      <EditorRow label=\"\">\r\n        <Input placeholder='Enter your log query' value={logQuery} onChange={(e: any) => onChangeLogQuery(e)} />\r\n      </EditorRow>\r\n    </EditorRows>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Select, InlineField, Input } from '@grafana/ui';\r\nimport { EditorRow, EditorRows } from '../../extended/EditorRow';\r\nimport { DUMMY_METRIC_NAME, DUMMY_STASTISTIC, MetricEditorMode } from '../../common-ds';\r\n\r\nexport function Metric({ query, onChange, editorMode }: any) {\r\n  const { elementType, cloudIdentifierId, MetricName, statistic, metricQuery } = query;\r\n\r\n  const onChangeElementType = (e: any) => {\r\n    onChange({ ...query, elementType: e.target.value });\r\n  };\r\n\r\n  const onChangeInstanceID = (e: any) => {\r\n    onChange({ ...query, cloudIdentifierId: e.target.value });\r\n  };\r\n\r\n  const onChangeMetricQuery = (e: any) => {\r\n    onChange({ ...query, metricQuery: e.target.value });\r\n  };\r\n\r\n  const onChangeMetricName = (value: any) => {\r\n    onChange({ ...query, MetricName: value });\r\n  };\r\n\r\n  const onChangeStatistic = (value: any) => {\r\n    onChange({ ...query, statistic: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <EditorRows>\r\n      <EditorRow label=\"\">\r\n        <InlineField label=\"Element Type\">\r\n          <Input value={elementType} onChange={(e: any) => onChangeElementType(e)} />\r\n        </InlineField>\r\n        <InlineField label=\"Instance ID\">\r\n          <Input value={cloudIdentifierId} onChange={(e: any) => onChangeInstanceID(e)} />\r\n        </InlineField>\r\n      </EditorRow>\r\n      {\r\n        editorMode === MetricEditorMode.Builder ?\r\n          <EditorRow label=\"\">\r\n            <InlineField label=\"Metric Name\">\r\n              <Select\r\n                className=\"min-width-12 width-12\"\r\n                value={MetricName}\r\n                options={DUMMY_METRIC_NAME}\r\n                onChange={(e) => onChangeMetricName(e.value)}\r\n                menuShouldPortal={true}\r\n              />\r\n            </InlineField>\r\n            <InlineField label=\"Statistic\">\r\n              <Select className=\"min-width-12 width-12\" value={statistic} options={DUMMY_STASTISTIC} onChange={(e) => onChangeStatistic(e.value)} menuShouldPortal={true} />\r\n            </InlineField>\r\n          </EditorRow> :\r\n          <EditorRow label=\"\">\r\n            <Input placeholder='Enter your query' value={metricQuery} onChange={(e: any) => onChangeMetricQuery(e)} />\r\n          </EditorRow>\r\n      }\r\n    </EditorRows>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { InlineField, Input } from '@grafana/ui';\r\nimport { EditorRow, EditorRows } from '../../extended/EditorRow';\r\n\r\nexport function Trace({ query, onChange }: any) {\r\n  const { elementType, instanceID, traceQuery, traceLocation } = query;\r\n\r\n  const onChangeElementType = (e: any) => {\r\n    onChange({ ...query, elementType: e.target.value });\r\n  };\r\n\r\n  const onChangeInstanceID = (e: any) => {\r\n    onChange({ ...query, instanceID: e.target.value });\r\n  };\r\n\r\n  const onChangeTraceLocation = (e: any) => {\r\n    onChange({ ...query, traceLocation: e.target.value });\r\n  };\r\n\r\n  const onChangeTraceQuery = (e: any) => {\r\n    onChange({ ...query, traceQuery: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <EditorRows>\r\n      <EditorRow label=\"\">\r\n        <InlineField label=\"Element Type\">\r\n          <Input value={elementType} onChange={(e: any) => onChangeElementType(e)} />\r\n        </InlineField>\r\n        <InlineField label=\"Instance ID\">\r\n          <Input value={instanceID} onChange={(e: any) => onChangeInstanceID(e)} />\r\n        </InlineField>\r\n        <InlineField label=\"Trace Location\">\r\n          <Input value={traceLocation} onChange={(e: any) => onChangeTraceLocation(e)} />\r\n        </InlineField>\r\n      </EditorRow>\r\n      <EditorRow label=\"\">\r\n        <Input placeholder='Enter your trace query' value={traceQuery} onChange={(e: any) => onChangeTraceQuery(e)} />\r\n      </EditorRow>\r\n    </EditorRows>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { InlineField, Select, Input } from '@grafana/ui';\r\nimport {\r\n  SOURCE_TYPE,\r\n  SOURCE_VALUE,\r\n  METRIC_TYPE,\r\n  MetricEditorMode\r\n} from '../common-ds';\r\nimport { Metric } from './EditorComponents/Metric';\r\nimport { Log } from './EditorComponents/Log';\r\nimport { Trace } from './EditorComponents/Trace';\r\nimport { Api } from './EditorComponents/Api';\r\nimport { services } from '../service';\r\n\r\nexport function QueryEditor({ query, onChange, onRunQuery }: any) {\r\n  const [elementId, setElementId] = useState(\"\");\r\n  const onChanged = useRef(false);\r\n\r\n  const getCloudElements = useCallback((id: string, query: any) => {\r\n    services.getCloudElements(id).then((res) => {\r\n      if (res && res[0]) {\r\n        const cloudElement = res[0];\r\n        query = {\r\n          ...query,\r\n          \"elementType\": cloudElement.elementType,\r\n          \"elementId\": parseInt(id, 10),\r\n          \"cloudIdentifierName\": cloudElement.instanceName,\r\n          \"cloudIdentifierId\": cloudElement.instanceId,\r\n          \"type\": \"appkube-cloudwatch\",\r\n          \"queryMode\": \"Metrics\",\r\n          \"source\": \"url\",\r\n          \"productId\": 1,\r\n          \"environmentId\": parseInt(id, 10),\r\n          \"moduleId\": 2,\r\n          \"serviceId\": 2,\r\n          \"serviceType\": \"java app service\",\r\n          \"cmdbUrl\": \"\",\r\n          \"vaultUrl\": \"\",\r\n          \"namespace\": \"AWS/EC2\",\r\n          \"metricName\": \"CPUUtilization\",\r\n          \"statistic\": \"Average\",\r\n          \"matchExact\": true,\r\n          \"expression\": \"\",\r\n          \"id\": \"\",\r\n          \"alias\": \"\",\r\n          \"period\": \"\",\r\n          \"metricQueryType\": 0,\r\n          \"metricEditorMode\": 0,\r\n          \"sqlExpression\": \"\",\r\n          \"accountId\": \"657907747545\",\r\n          \"region\": \"\"\r\n        };\r\n        onChange({ ...query });\r\n      }\r\n    });\r\n  }, [onChange]);\r\n\r\n  useEffect(() => {\r\n    if (onChanged.current === false) {\r\n      const id = findParam(\"var-elementId\", window.location.href);\r\n      if (id) {\r\n        setElementId(id);\r\n        getCloudElements(id, query);\r\n      } else {\r\n        alert(\"Please set 'elementId' variable\");\r\n      }\r\n      onChanged.current = true;\r\n    }\r\n  }, [query, onChange, getCloudElements]);\r\n\r\n  const findParam = (paramName: string, url: string) => {\r\n    if (!url) {\r\n      url = location.href;\r\n    }\r\n    paramName = paramName.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\r\n    const regexS = \"[\\\\?&]\" + paramName + \"=([^&#]*)\";\r\n    const regex = new RegExp(regexS);\r\n    const results = regex.exec(url);\r\n    return results == null ? \"\" : results[1];\r\n  }\r\n\r\n  const onSourceTypeChange = (value: any) => {\r\n    if (value === SOURCE_VALUE.METRIC) {\r\n      query.queryType = 'timeSeriesQuery';\r\n    } else if (value === SOURCE_VALUE.LOG) {\r\n      query.queryType = 'logAction';\r\n    }\r\n    query.sourceType = value;\r\n    if (!elementId) {\r\n      const id = findParam(\"var-elementId\", window.location.href);\r\n      if (id) {\r\n        setElementId(id);\r\n        getCloudElements(id, query);\r\n      } else {\r\n        alert(\"Please set 'elementId' variable\");\r\n      }\r\n    } else {\r\n      getCloudElements(elementId, query);\r\n    }\r\n  };\r\n\r\n  const onMetricTypeChange = (value: any) => {\r\n    onChange({ ...query, metricType: value });\r\n  };\r\n\r\n  const onChangeData = (value: any) => {\r\n    onChange({ ...query, ...value });\r\n  };\r\n\r\n  const {\r\n    sourceType,\r\n    metricType,\r\n    metricEditorMode,\r\n  } = query;\r\n\r\n  const defaultMetricMode = metricEditorMode ? metricEditorMode : MetricEditorMode.Builder;\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <InlineField label=\"Source Type\">\r\n          <Select\r\n            className=\"min-width-12 width-12\"\r\n            value={sourceType}\r\n            options={SOURCE_TYPE}\r\n            onChange={(e) => onSourceTypeChange(e.value)}\r\n            menuShouldPortal={true}\r\n          />\r\n        </InlineField>\r\n        {\r\n          sourceType === SOURCE_VALUE.METRIC ?\r\n            <>\r\n              <InlineField label=\"Source Type\">\r\n                <Select\r\n                  className=\"min-width-12 width-12\"\r\n                  value={metricType}\r\n                  options={METRIC_TYPE}\r\n                  onChange={(e) => onMetricTypeChange(e.value)}\r\n                  menuShouldPortal={true}\r\n                />\r\n              </InlineField>\r\n              <InlineField label=\"Element ID\">\r\n                <Input disabled={true} value={elementId} />\r\n              </InlineField>\r\n              <div style={{ display: \"block\", flexGrow: \"1\" }} />\r\n            </>\r\n            :\r\n            <></>\r\n        }\r\n      </div>\r\n      <div>\r\n        {\r\n          sourceType === SOURCE_VALUE.METRIC ?\r\n            <Metric\r\n              query={query}\r\n              onChange={onChangeData}\r\n              editorMode={defaultMetricMode}\r\n            />\r\n            :\r\n            <></>\r\n        }\r\n        {\r\n          sourceType === SOURCE_VALUE.LOG ?\r\n            <Log\r\n              query={query}\r\n              onChange={onChangeData}\r\n            />\r\n            :\r\n            <></>\r\n        }\r\n        {\r\n          sourceType === SOURCE_VALUE.TRACE ?\r\n            <Trace\r\n              query={query}\r\n              onChange={onChangeData}\r\n            />\r\n            :\r\n            <></>\r\n        }\r\n        {\r\n          sourceType === SOURCE_VALUE.API ?\r\n            <Api\r\n              query={query}\r\n              onChange={onChangeData}\r\n            />\r\n            :\r\n            <></>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { DataSourceInstanceSettings, CoreApp, DataQueryRequest, DataQueryResponse, ScopedVars } from '@grafana/data';\r\nimport { DataSourceWithBackend } from '@grafana/runtime';\r\n\r\nimport { MyQuery, MyDataSourceOptions, DEFAULT_QUERY } from './types';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport class DataSource extends DataSourceWithBackend<MyQuery, MyDataSourceOptions> {\r\n  constructor(instanceSettings: DataSourceInstanceSettings<MyDataSourceOptions>) {\r\n    super(instanceSettings);\r\n  }\r\n\r\n  getDefaultQuery(_: CoreApp): Partial<MyQuery> {\r\n    return DEFAULT_QUERY\r\n  }\r\n\r\n  query(request: DataQueryRequest<MyQuery>): Observable<DataQueryResponse> {\r\n    return super.query(request);\r\n  }\r\n\r\n  applyTemplateVariables(query: MyQuery, scopedVars: ScopedVars): Record<string, any> {\r\n    return super.applyTemplateVariables(query, scopedVars);\r\n  }\r\n}\r\n","import { css } from '@emotion/css';\r\nimport React, { ComponentProps } from 'react';\r\nimport { stylesFactory, useTheme2, ReactUtils, Field, Icon, PopoverContent, Tooltip, Tag } from '@grafana/ui';\r\nimport { Space } from './Space';\r\nimport { Stack } from './Stack';\r\nimport type { GrafanaTheme2 } from '@grafana/data';\r\n\r\nexport const EditorFieldGroup: React.FC<{\r\n  children: React.ReactNode;\r\n}> = ({ children }) => {\r\n  return <Stack gap={1}>{children}</Stack>;\r\n};\r\n\r\ninterface EditorFieldProps extends ComponentProps<typeof Field> {\r\n  label: string;\r\n  children: React.ReactElement;\r\n  promoNode?: React.ReactNode;\r\n  width?: number | string;\r\n  optional?: boolean;\r\n  tooltip?: PopoverContent;\r\n  invalid?: boolean;\r\n  tag?: string;\r\n  dataTestId?: string;\r\n  borderColor?: string;\r\n  horizontal?: boolean;\r\n}\r\n\r\nexport const EditorField: React.FC<EditorFieldProps> = (props) => {\r\n  const { label, optional, tooltip, children, promoNode, width, invalid, borderColor, tag, dataTestId, horizontal, ...fieldProps } = props;\r\n\r\n  const theme = useTheme2();\r\n  const styles = getStyles(theme, width, invalid ? 'red' : borderColor, horizontal);\r\n\r\n  // Null check for backward compatibility\r\n  const childInputId = fieldProps?.htmlFor || ReactUtils?.getChildId(children);\r\n  const testId = (compType = '') => `infinity-query-field${compType ? '-' + compType : ''}-${(dataTestId || label).replace(/\\ /g, '-')}`.toLowerCase();\r\n\r\n  const labelEl = (\r\n    <>\r\n      <label className={styles.label} htmlFor={childInputId} data-testid={testId('label')}>\r\n        {label}\r\n        {tag && <Tag name={tag} className={styles.tag} colorIndex={10} />}\r\n        {optional && <span className={styles.optional}> - optional</span>}\r\n        {promoNode}\r\n        {tooltip && (\r\n          <Tooltip placement=\"top\" content={tooltip} theme=\"info\">\r\n            <Icon name=\"info-circle\" size=\"sm\" className={styles.icon} />\r\n          </Tooltip>\r\n        )}\r\n      </label>\r\n      <Space v={0.5} />\r\n    </>\r\n  );\r\n\r\n  if (horizontal) {\r\n    return (\r\n      <div className={styles.root} data-testid={testId('wrapper')}>\r\n        <Field className={styles.field} label={labelEl} {...fieldProps} horizontal={true}>\r\n          {children}\r\n        </Field>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.root} data-testid={testId('wrapper')}>\r\n      <Field className={styles.field} label={labelEl} {...fieldProps}>\r\n        {children}\r\n      </Field>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getStyles = stylesFactory((theme: GrafanaTheme2, width?: number | string, borderColor = 'transparent', horizontal = false) => {\r\n  return {\r\n    root: css({\r\n      minWidth: theme.spacing(width ?? 0),\r\n      paddingInlineStart: '7px',\r\n      paddingInlineEnd: '5px',\r\n      borderLeft: `1px solid ${borderColor}`,\r\n      marginRight: horizontal ? '10px' : '5px',\r\n    }),\r\n    label: css({\r\n      fontSize: 12,\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      paddingLeft: '1px',\r\n      border: horizontal ? `1px solid ${borderColor}` : '',\r\n      padding: horizontal ? '5px 10px 5px 0px' : '',\r\n      textAlign: horizontal ? 'right' : 'left',\r\n    }),\r\n    tag: css({\r\n      marginLeft: '10px',\r\n    }),\r\n    optional: css({\r\n      fontStyle: 'italic',\r\n      color: theme.colors.text.secondary,\r\n    }),\r\n    field: css({\r\n      marginBottom: 0, // GrafanaUI/Field has a bottom margin which we must remove\r\n      marginRight: '0px',\r\n    }),\r\n    icon: css({\r\n      color: theme.colors.text.secondary,\r\n      marginLeft: theme.spacing(1),\r\n      ':hover': {\r\n        color: theme.colors.text.primary,\r\n      },\r\n    }),\r\n  };\r\n});\r\n","import { css } from '@emotion/css';\r\nimport React, { useState } from 'react';\r\nimport { GrafanaTheme2 } from '@grafana/data';\r\nimport { useStyles2, Button } from '@grafana/ui';\r\nimport { Stack } from './Stack';\r\n\r\ninterface EditorRowProps {\r\n  label: string;\r\n  collapsible?: boolean;\r\n  title?: () => string | React.ReactNode;\r\n  collapsed?: boolean;\r\n  dataTestId?: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const EditorRow: React.FC<EditorRowProps> = ({ label, collapsible, collapsed = true, title, dataTestId, children }) => {\r\n  const styles = useStyles2(getStyles);\r\n  const [show, setShow] = useState(collapsed);\r\n  const testId = (compType = '') => `infinity-query-row${compType ? '-' + compType : ''}-${(dataTestId || label).replace(/\\ /g, '-')}`.toLowerCase();\r\n  return (\r\n    <div className={styles.root} data-testid={testId('wrapper')}>\r\n      {collapsible && (\r\n        <>\r\n          <Button\r\n            icon={show ? 'angle-down' : 'angle-right'}\r\n            fill=\"text\"\r\n            size=\"sm\"\r\n            variant=\"secondary\"\r\n            onClick={(e) => {\r\n              setShow(!show);\r\n              e.preventDefault();\r\n            }}\r\n            style={{ marginRight: '10px' }}\r\n            data-testid={testId(`collapse-${show ? 'hide' : 'show'}`)}\r\n          />\r\n          <span\r\n            onClick={(e) => {\r\n              setShow(!show);\r\n              e.preventDefault();\r\n            }}\r\n            data-testid={testId(`title`)}\r\n          >\r\n            <b className={styles.collapseTile}>{label}</b>\r\n          </span>\r\n          <span className={styles.collapseTileSecondary}>{title ? title() : 'Options'}</span>\r\n        </>\r\n      )}\r\n      {show && (\r\n        <div style={{ display: 'flex', marginTop: label && collapsible ? '15px' : '0px', marginLeft: '0px' }} data-testid={testId(`children`)}>\r\n          {children}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getStyles = (theme: GrafanaTheme2) => {\r\n  return {\r\n    root: css({\r\n      padding: theme.spacing(1),\r\n      backgroundColor: theme.colors.background.secondary,\r\n      borderRadius: theme.shape.borderRadius(1),\r\n    }),\r\n    collapseTile: css({\r\n      marginRight: theme.spacing(1),\r\n      color: theme.colors.secondary.text,\r\n    }),\r\n    collapseTileSecondary: css({\r\n      color: theme.colors.text.secondary,\r\n      fontSize: theme.typography.bodySmall.fontSize,\r\n      '&:hover': {\r\n        color: theme.colors.secondary.text,\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\ninterface EditorRowsProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const EditorRows: React.FC<EditorRowsProps> = ({ children }) => {\r\n  return (\r\n    <Stack gap={0.5} direction=\"column\">\r\n      {children}\r\n    </Stack>\r\n  );\r\n};\r\n","import { css, cx } from '@emotion/css';\r\nimport React from 'react';\r\n\r\nimport { GrafanaTheme2 } from '@grafana/data';\r\n\r\nimport { stylesFactory, useTheme2 } from '@grafana/ui';\r\n\r\nexport interface SpaceProps {\r\n  v?: number;\r\n  h?: number;\r\n  layout?: 'block' | 'inline';\r\n}\r\n\r\nexport const Space = (props: SpaceProps) => {\r\n  const theme = useTheme2();\r\n  const styles = getStyles(theme, props);\r\n\r\n  return <span className={cx(styles.wrapper)} />;\r\n};\r\n\r\nSpace.defaultProps = {\r\n  v: 0,\r\n  h: 0,\r\n  layout: 'block',\r\n};\r\n\r\nconst getStyles = stylesFactory((theme: GrafanaTheme2, props: SpaceProps) => ({\r\n  wrapper: css([\r\n    {\r\n      paddingRight: theme.spacing(props.h ?? 0),\r\n      paddingBottom: theme.spacing(props.v ?? 0),\r\n    },\r\n    props.layout === 'inline' && {\r\n      display: 'inline-block',\r\n    },\r\n    props.layout === 'block' && {\r\n      display: 'block',\r\n    },\r\n  ]),\r\n}));\r\n","import { css } from '@emotion/css';\r\nimport React, { CSSProperties, useCallback } from 'react';\r\n\r\nimport { GrafanaTheme2 } from '@grafana/data';\r\n\r\nimport { useStyles2 } from '@grafana/ui';\r\n\r\ninterface StackProps {\r\n  direction?: CSSProperties['flexDirection'];\r\n  alignItems?: CSSProperties['alignItems'];\r\n  wrap?: boolean;\r\n  gap?: number;\r\n  flexGrow?: CSSProperties['flexGrow'];\r\n  children?: React.ReactNode;\r\n}\r\n\r\nexport const Stack: React.FC<StackProps> = ({ children, ...props }) => {\r\n  const styles = useStyles2(useCallback((theme) => getStyles(theme, props), [props]));\r\n\r\n  return <div className={styles.root}>{children}</div>;\r\n};\r\n\r\nconst getStyles = (theme: GrafanaTheme2, props: StackProps) => ({\r\n  root: css({\r\n    display: 'flex',\r\n    flexDirection: props.direction ?? 'row',\r\n    flexWrap: props.wrap ?? true ? 'wrap' : undefined,\r\n    alignItems: props.alignItems,\r\n    gap: theme.spacing(props.gap ?? 2),\r\n    flexGrow: props.flexGrow,\r\n  }),\r\n});\r\n","const BASE_URL = \"http://34.199.12.114:6057\";\r\nconst GET_CLOUD_ELEMENT = \"/api/cloud-element/search\";\r\n\r\nexport const services = {\r\n    getCloudElements: function(id: string) {\r\n        return fetch(`${BASE_URL}${GET_CLOUD_ELEMENT}?id=${id}`)\r\n        .then(response => response.json())\r\n    }\r\n};","import { DataQuery, DataSourceJsonData } from '@grafana/data';\r\n\r\nexport interface MyQuery extends DataQuery {\r\n  queryText?: string;\r\n  constant: number;\r\n}\r\n\r\nexport const DEFAULT_QUERY: Partial<MyQuery> = {\r\n  constant: 6.5,\r\n};\r\n\r\n/**\r\n * These are options configured for each DataSource instance\r\n */\r\nexport interface MyDataSourceOptions extends DataSourceJsonData {\r\n  path?: string;\r\n  apiEndpoint?: string;\r\n}\r\n\r\n/**\r\n * Value that is used in the backend, but never sent over HTTP to the frontend\r\n */\r\nexport interface MySecureJsonData {\r\n  apiKey?: string;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__emotion_css__;","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_data__;","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_runtime__;","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_ui__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { DataSourcePlugin } from '@grafana/data';\r\nimport { DataSource } from './datasource';\r\nimport { ConfigEditor } from './components/ConfigEditor';\r\nimport { QueryEditor } from './components/QueryEditor';\r\nimport { MyQuery, MyDataSourceOptions } from './types';\r\n\r\nexport const plugin = new DataSourcePlugin<DataSource, MyQuery, MyDataSourceOptions>(DataSource)\r\n  .setConfigEditor(ConfigEditor)\r\n  .setQueryEditor(QueryEditor);\r\n"],"names":["SOURCE_VALUE","METRIC","LOG","TRACE","API","MetricEditorMode","SOURCE_TYPE","label","value","METRIC_TYPE","DUMMY_PRODUCTS","DUMMY_ENVS","DUMMY_MODULES","DUMMY_SERVICES","DUMMY_METRIC_NAME","DUMMY_STASTISTIC","METRIC_EDITOR_MODES","Builder","Code","React","InlineField","Input","SecretInput","ConfigEditor","props","onOptionsChange","options","onPathChange","event","jsonData","Object","assign","path","target","onAPIEndPointChange","apiEndpoint","onAPIKeyChange","secureJsonData","apiKey","onResetAPIKey","secureJsonFields","createElement","className","labelWidth","onChange","placeholder","width","isConfigured","onReset","useRef","Button","Checkbox","EditorRow","EditorRows","EditorField","Api","_ref","query","elementType","instanceID","method","columns","isObjectInsteadOfArray","isDataInColumn","rowsRoots","allColumns","setAllColumns","useState","fetchingComplete","useEffect","current","selector","as","formatAs","onChangeElementType","e","onChangeInstanceID","onChangeMethod","onChangeColumn","index","columnsList","key","JSON","parse","stringify","onClickAddColumn","push","onClickRemove","splice","renderColumns","retData","i","length","column","onClick","icon","Fragment","onChangeObjectArray","checked","onChangeDataInColumn","onChangeRowsRoots","_EditorRow","_EditorRow2","_EditorRow3","Log","logQuery","logGroup","onChangeLogGroup","onChangeLogQuery","Select","Metric","editorMode","cloudIdentifierId","MetricName","statistic","metricQuery","onChangeMetricQuery","onChangeMetricName","onChangeStatistic","menuShouldPortal","Trace","traceQuery","traceLocation","onChangeTraceLocation","onChangeTraceQuery","useCallback","services","QueryEditor","onRunQuery","elementId","setElementId","onChanged","getCloudElements","id","then","res","cloudElement","parseInt","instanceName","instanceId","findParam","window","location","href","alert","paramName","url","replace","regexS","regex","RegExp","results","exec","onSourceTypeChange","queryType","sourceType","onMetricTypeChange","metricType","onChangeData","metricEditorMode","defaultMetricMode","style","display","alignItems","disabled","flexGrow","DataSourceWithBackend","DEFAULT_QUERY","DataSource","constructor","instanceSettings","getDefaultQuery","_","request","applyTemplateVariables","scopedVars","css","stylesFactory","useTheme2","ReactUtils","Field","Icon","Tooltip","Tag","Space","Stack","EditorFieldGroup","children","gap","optional","tooltip","promoNode","invalid","borderColor","tag","dataTestId","horizontal","fieldProps","_objectWithoutPropertiesLoose","_excluded","theme","styles","getStyles","childInputId","htmlFor","getChildId","testId","compType","arguments","undefined","toLowerCase","labelEl","name","colorIndex","placement","content","size","_Space","v","root","_extends","field","minWidth","spacing","paddingInlineStart","paddingInlineEnd","borderLeft","marginRight","fontSize","fontWeight","typography","fontWeightMedium","paddingLeft","border","padding","textAlign","marginLeft","fontStyle","color","colors","text","secondary","marginBottom","primary","useStyles2","collapsible","collapsed","title","show","setShow","fill","variant","preventDefault","collapseTile","collapseTileSecondary","marginTop","backgroundColor","background","borderRadius","shape","bodySmall","_ref2","direction","cx","wrapper","defaultProps","h","layout","_props$h","_props$v","paddingRight","paddingBottom","_props$direction","_props$wrap","_props$gap","flexDirection","flexWrap","wrap","BASE_URL","GET_CLOUD_ELEMENT","fetch","response","json","constant","DataSourcePlugin","plugin","setConfigEditor","setQueryEditor"],"sourceRoot":""}